<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.1.3 (Python 3.10.2 on win32)" generated="20220406 14:40:45.003" rpa="false" schemaversion="2">
<suite id="s1" name="CriarProduto" source="c:\projects\automacao_serverest\resources\specs\Produto\CriarProduto.robot">
<kw name="Set Client Key" library="Base" type="SETUP">
<msg timestamp="20220406 14:40:45.377" level="TRACE">Arguments: [  ]</msg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{teste}</var>
<arg>email=larai1@qa.com.br</arg>
<arg>password=teste</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220406 14:40:45.384" level="TRACE">Arguments: [ 'email=larai1@qa.com.br' | 'password=teste' ]</msg>
<msg timestamp="20220406 14:40:45.385" level="TRACE">Return: {'email': 'larai1@qa.com.br', 'password': 'teste'}</msg>
<msg timestamp="20220406 14:40:45.386" level="INFO">&amp;{teste} = { email=larai1@qa.com.br | password=teste }</msg>
<status status="PASS" starttime="20220406 14:40:45.384" endtime="20220406 14:40:45.386"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${API_URL}/login</arg>
<arg>json=${teste}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20220406 14:40:45.387" level="TRACE">Arguments: [ 'http://localhost:3000/login' | json={'email': 'larai1@qa.com.br', 'password': 'teste'} ]</msg>
<msg timestamp="20220406 14:40:45.394" level="DEBUG">Starting new HTTP connection (1): localhost:3000</msg>
<msg timestamp="20220406 14:40:45.405" level="DEBUG">http://localhost:3000 "POST /login HTTP/1.1" 200 269</msg>
<msg timestamp="20220406 14:40:45.407" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '50', 'Content-Type': 'application/json'} 
 body=b'{"email": "larai1@qa.com.br", "password": "teste"}' 
 </msg>
<msg timestamp="20220406 14:40:45.408" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '453a63a1-1fce-47fd-b280-81441ccc5066', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '269', 'Date': 'Wed, 06 Apr 2022 17:40:45 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImxhcmFpMUBxYS5jb20uYnIiLCJwYXNzd29yZCI6InRlc3RlIiwiaWF0IjoxNjQ5MjY2ODQ1LCJleHAiOjE2NDkyNjc0NDV9.YhVpWGR1vAhN4GVBVsbVps94Qc6xYhVqiVb1G3jC6XI"
} 
 </msg>
<msg timestamp="20220406 14:40:45.408" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20220406 14:40:45.408" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220406 14:40:45.386" endtime="20220406 14:40:45.408"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${token}</var>
<arg>${response.json()["authorization"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220406 14:40:45.409" level="TRACE">Arguments: [ 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImxhcmFpMUBxYS5jb20uYnIiLCJwYXNzd29yZCI6InRlc3RlIiwiaWF0IjoxNjQ5MjY2ODQ1LCJleHAiOjE2NDkyNjc0NDV9.YhVpWGR1vAhN4GVBVsbVps94Qc6xYhVqiVb1G3jC6XI' ]</msg>
<msg timestamp="20220406 14:40:45.409" level="TRACE">Return: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImxhcmFpMUBxYS5jb20uYnIiLCJwYXNzd29yZCI6InRlc3RlIiwiaWF0IjoxNjQ5MjY2ODQ1LCJleHAiOjE2NDkyNjc0NDV9.YhVpWGR1vAhN4GVBVsbVps94Qc6xYhVqiVb1G3jC6XI'</msg>
<msg timestamp="20220406 14:40:45.410" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImxhcmFpMUBxYS5jb20uYnIiLCJwYXNzd29yZCI6InRlc3RlIiwiaWF0IjoxNjQ5MjY2ODQ1LCJleHAiOjE2NDkyNjc0NDV9.YhVpWGR1vAhN4GVBVsbVps94Qc6xYhVqiVb1G3jC6XI</msg>
<status status="PASS" starttime="20220406 14:40:45.408" endtime="20220406 14:40:45.410"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${token}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220406 14:40:45.410" level="TRACE">Arguments: [ '${token}' ]</msg>
<msg timestamp="20220406 14:40:45.410" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImxhcmFpMUBxYS5jb20uYnIiLCJwYXNzd29yZCI6InRlc3RlIiwiaWF0IjoxNjQ5MjY2ODQ1LCJleHAiOjE2NDkyNjc0NDV9.YhVpWGR1vAhN4GVBVsbVps94Qc6xYhVqiVb1G3jC6XI</msg>
<msg timestamp="20220406 14:40:45.410" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220406 14:40:45.410" endtime="20220406 14:40:45.410"/>
</kw>
<msg timestamp="20220406 14:40:45.411" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220406 14:40:45.376" endtime="20220406 14:40:45.411"/>
</kw>
<test id="s1-t1" name="Cenário 1 - Cadastro de Produto com dados válidos">
<kw name="Produto" library="Produto">
<var>${produto}</var>
<msg timestamp="20220406 14:40:45.412" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20220406 14:40:45.413" level="TRACE">Return: {'descricao': 'serve monitorars',
 'nome': 'Monitor Semp',
 'preco': 42,
 'quantidade': 33}</msg>
<msg timestamp="20220406 14:40:45.413" level="INFO">${produto} = {'nome': 'Monitor Semp', 'preco': 42, 'descricao': 'serve monitorars', 'quantidade': 33}</msg>
<status status="PASS" starttime="20220406 14:40:45.412" endtime="20220406 14:40:45.413"/>
</kw>
<kw name="Enviar Um Produto" library="Base">
<var>${response}</var>
<arg>${produto}</arg>
<msg timestamp="20220406 14:40:45.414" level="TRACE">Arguments: [ ${payload}={'descricao': 'serve monitorars',
 'nome': 'Monitor Semp',
 'preco': 42,
 'quantidade': 33} ]</msg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{tokenzinho}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220406 14:40:45.415" level="TRACE">Arguments: [ 'Authorization=${token}' ]</msg>
<msg timestamp="20220406 14:40:45.416" level="TRACE">Return: {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImxhcmFpMUBxYS5jb20uYnIiLCJwYXNzd29yZCI6InRlc3RlIiwiaWF0IjoxNjQ5MjY2ODQ1LCJleHAiOjE2NDkyNjc0NDV9.YhVpWGR1vAhN4GVBVsbVps94Qc6xYhVqiVb1G3jC6XI'}</msg>
<msg timestamp="20220406 14:40:45.416" level="INFO">&amp;{tokenzinho} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImxhcmFpMUBxYS5jb20uYnIiLCJwYXNzd29yZCI6InRlc3RlIiwiaWF0IjoxNjQ5MjY2ODQ1LCJleHAiOjE2NDkyNjc0NDV9.YhVpWGR1vAhN4GVBVsbVps94Qc6xYhV...</msg>
<status status="PASS" starttime="20220406 14:40:45.414" endtime="20220406 14:40:45.417"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${API_URL}/produtos</arg>
<arg>json=${payload}</arg>
<arg>headers=${tokenzinho}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20220406 14:40:45.419" level="TRACE">Arguments: [ 'http://localhost:3000/produtos' | json={'descricao': 'serve monitorars',
 'nome': 'Monitor Semp',
 'preco': 42,
 'quantidade': 33} | headers={'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImxhcmFpMUBxYS5jb20uYnIiLCJwYXNzd29yZCI6InRlc3RlIiwiaWF0IjoxNjQ5MjY2ODQ1LCJleHAiOjE2NDkyNjc0NDV9.YhVpWGR1vAhN4GVBVsbVps94Qc6xYhVqiVb1G3jC6XI'} | expected_status='any' ]</msg>
<msg timestamp="20220406 14:40:45.422" level="DEBUG">Starting new HTTP connection (1): localhost:3000</msg>
<msg timestamp="20220406 14:40:45.431" level="DEBUG">http://localhost:3000 "POST /produtos HTTP/1.1" 400 53</msg>
<msg timestamp="20220406 14:40:45.432" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImxhcmFpMUBxYS5jb20uYnIiLCJwYXNzd29yZCI6InRlc3RlIiwiaWF0IjoxNjQ5MjY2ODQ1LCJleHAiOjE2NDkyNjc0NDV9.YhVpWGR1vAhN4GVBVsbVps94Qc6xYhVqiVb1G3jC6XI', 'Content-Length': '88', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Monitor Semp", "preco": 42, "descricao": "serve monitorars", "quantidade": 33}' 
 </msg>
<msg timestamp="20220406 14:40:45.433" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '3310a496-831e-47cd-a3c5-15a6f4fd9a24', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '53', 'Date': 'Wed, 06 Apr 2022 17:40:45 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Já existe produto com esse nome"
} 
 </msg>
<msg timestamp="20220406 14:40:45.433" level="TRACE">Return: &lt;Response [400]&gt;</msg>
<msg timestamp="20220406 14:40:45.433" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220406 14:40:45.417" endtime="20220406 14:40:45.434"/>
</kw>
<msg timestamp="20220406 14:40:45.434" level="TRACE">Return: &lt;Response [400]&gt;</msg>
<msg timestamp="20220406 14:40:45.434" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220406 14:40:45.413" endtime="20220406 14:40:45.434"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>201</arg>
<doc>Fails if response status code is different than the expected.</doc>
<msg timestamp="20220406 14:40:45.435" level="TRACE">Arguments: [ '201' ]</msg>
<msg timestamp="20220406 14:40:45.439" level="FAIL">Url: http://localhost:3000/produtos Expected status: 400 != 201</msg>
<msg timestamp="20220406 14:40:45.440" level="DEBUG">Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\RequestsLibrary\RequestsKeywords.py", line 121, in status_should_be
    self._check_status(expected_status, response, msg)
  File "C:\Python310\lib\site-packages\RequestsLibrary\SessionKeywords.py", line 582, in _check_status
    assert_equal(resp.status_code, expected_status, msg)
  File "C:\Python310\lib\site-packages\robot\utils\asserts.py", line 182, in assert_equal
    _report_inequality(first, second, '!=', msg, values, formatter)
  File "C:\Python310\lib\site-packages\robot\utils\asserts.py", line 231, in _report_inequality
    raise AssertionError(msg)</msg>
<status status="FAIL" starttime="20220406 14:40:45.435" endtime="20220406 14:40:45.440"/>
</kw>
<status status="FAIL" starttime="20220406 14:40:45.411" endtime="20220406 14:40:45.441">Url: http://localhost:3000/produtos Expected status: 400 != 201</status>
</test>
<doc>Cadastro De Produtos</doc>
<status status="FAIL" starttime="20220406 14:40:45.010" endtime="20220406 14:40:45.443"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="CriarProduto">CriarProduto</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
